[{"path":[]},{"path":"https://r-lib.github.io/zip/dev/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://r-lib.github.io/zip/dev/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://r-lib.github.io/zip/dev/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://r-lib.github.io/zip/dev/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://r-lib.github.io/zip/dev/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@posit.co. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://r-lib.github.io/zip/dev/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://r-lib.github.io/zip/dev/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://r-lib.github.io/zip/dev/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://r-lib.github.io/zip/dev/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://r-lib.github.io/zip/dev/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://r-lib.github.io/zip/dev/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://r-lib.github.io/zip/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 zip authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://r-lib.github.io/zip/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gábor Csárdi. Author, maintainer. Kuba Podgórski. Contributor. Rich Geldreich. Contributor. Posit Software, PBC. Copyright holder, funder.","code":""},{"path":"https://r-lib.github.io/zip/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Csárdi G (2024). zip: Cross-Platform 'zip' Compression. R package version 2.3.1.9000, https://r-lib.github.io/zip/, https://github.com/r-lib/zip.","code":"@Manual{,   title = {zip: Cross-Platform 'zip' Compression},   author = {Gábor Csárdi},   year = {2024},   note = {R package version 2.3.1.9000, https://r-lib.github.io/zip/},   url = {https://github.com/r-lib/zip}, }"},{"path":"https://r-lib.github.io/zip/dev/index.html","id":"zip","dir":"","previous_headings":"","what":"Cross-Platform zip Compression","title":"Cross-Platform zip Compression","text":"Cross-Platform ‘zip’ Compression","code":""},{"path":"https://r-lib.github.io/zip/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Cross-Platform zip Compression","text":"Stable version: Development version:","code":"install.packages(\"zip\") pak::pak(\"r-lib/zip\")"},{"path":"https://r-lib.github.io/zip/dev/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Cross-Platform zip Compression","text":"","code":"library(zip)"},{"path":"https://r-lib.github.io/zip/dev/index.html","id":"creating-zip-files","dir":"","previous_headings":"Usage","what":"Creating ZIP files","title":"Cross-Platform zip Compression","text":"zip() creates new ZIP archive. (overwrites output file exists.) Simply supply directories files want include archive. makes sense change top-level directory files archiving , files stored using relative path name. Directories added recursively default. zip_append() similar zip(), appends files existing ZIP archive.","code":"zip(\"sources.zip\", c(\"R\", \"src\")) file.info(\"sources.zip\") #>               size isdir mode               mtime               ctime #> sources.zip 580179 FALSE  644 2023-04-17 13:49:31 2023-04-17 13:49:31 #>                           atime uid gid       uname grname #> sources.zip 2023-04-17 13:49:31 501  20 gaborcsardi  staff"},{"path":"https://r-lib.github.io/zip/dev/index.html","id":"listing-zip-files","dir":"","previous_headings":"Usage","what":"Listing ZIP files","title":"Cross-Platform zip Compression","text":"zip_list() lists files ZIP archive. returns data frame:","code":"zip_list(\"sources.zip\") #>                                                     filename compressed_size #> 1                                                         R/               0 #> 2                                             R/assertions.R             151 #> 3                                                R/inflate.R             627 #> 4                                                R/process.R            1793 #> 5                                                  R/utils.R            1202 #> 6                                                    R/zip.R            3274 #> 7                                                       src/               0 #> 8                                                 src/init.c             367 #> 9                                                 src/init.o            1648 #> 10                                        src/install.libs.R             272 #> 11                                              src/Makevars             199 #> 12                                          src/Makevars.win             273 #> 13                                               src/miniz.c           55268 #> 14                                               src/miniz.h           18115 #> 15                                               src/miniz.o          120248 #> 16                                                src/rzip.c            2853 #> 17                                                src/rzip.o           10431 #> 18                                                src/tools/               0 #> 19                                        src/tools/cmdunzip           62958 #> 20                                      src/tools/cmdunzip.c             590 #> 21                                  src/tools/cmdunzip.dSYM/               0 #> 22                         src/tools/cmdunzip.dSYM/Contents/               0 #> 23               src/tools/cmdunzip.dSYM/Contents/Info.plist             304 #> 24               src/tools/cmdunzip.dSYM/Contents/Resources/               0 #> 25         src/tools/cmdunzip.dSYM/Contents/Resources/DWARF/               0 #> 26 src/tools/cmdunzip.dSYM/Contents/Resources/DWARF/cmdunzip           70680 #> 27                                          src/tools/cmdzip           63367 #> 28                                        src/tools/cmdzip.c            1066 #> 29                                    src/tools/cmdzip.dSYM/               0 #> 30                           src/tools/cmdzip.dSYM/Contents/               0 #> 31                 src/tools/cmdzip.dSYM/Contents/Info.plist             303 #> 32                 src/tools/cmdzip.dSYM/Contents/Resources/               0 #> 33           src/tools/cmdzip.dSYM/Contents/Resources/DWARF/               0 #> 34     src/tools/cmdzip.dSYM/Contents/Resources/DWARF/cmdzip           71098 #> 35                                           src/unixutils.c             724 #> 36                                           src/unixutils.o            4329 #> 37                                            src/winutils.c            1949 #> 38                                                 src/zip.c            2830 #> 39                                                 src/zip.h             808 #> 40                                                 src/zip.o           10541 #> 41                                                src/zip.so           66645 #>    uncompressed_size           timestamp permissions    crc32 offset #> 1                  0 2023-04-17 10:58:10         755 00000000      0 #> 2                398 2023-04-17 10:20:40         644 7f73a9e4     32 #> 3               2174 2023-04-17 10:20:40         644 3b0fdb9e    243 #> 4               6585 2023-04-17 10:20:40         644 99447436    927 #> 5               3915 2023-04-17 10:58:10         644 e653bff7   2777 #> 6              10369 2023-04-17 10:51:34         644 4d620f14   4034 #> 7                  0 2023-04-17 10:20:46         755 00000000   7361 #> 8                962 2023-04-17 10:20:40         644 e1c62c7d   7395 #> 9               3744 2023-04-17 10:20:46         644 6da275de   7818 #> 10               587 2022-03-04 14:05:04         644 4f80df1a   9522 #> 11               525 2022-12-19 13:17:12         644 c8789e48   9858 #> 12               700 2022-03-04 14:05:04         644 373232f9  10115 #> 13            314933 2023-04-17 10:20:40         644 450881b2  10450 #> 14             66871 2023-04-17 10:20:40         644 6c5a6c1e  65775 #> 15            333800 2023-04-17 10:20:46         644 887d9996  83947 #> 16             10857 2023-04-17 10:20:40         644 a2c358b5 204252 #> 17             23448 2023-04-17 10:20:46         644 ea86cde3 207161 #> 18                 0 2023-04-17 10:20:46         755 00000000 217648 #> 19            228469 2023-04-17 10:20:46         755 57376bd5 217688 #> 20              1343 2022-03-04 14:05:04         644 1a6e34f1 280710 #> 21                 0 2023-04-17 09:50:00         755 00000000 281366 #> 22                 0 2023-04-17 09:50:00         755 00000000 281420 #> 23               637 2023-04-17 10:20:46         644 294928f0 281483 #> 24                 0 2023-04-17 09:50:00         755 00000000 281876 #> 25                 0 2023-04-17 09:50:00         755 00000000 281949 #> 26            177363 2023-04-17 10:20:46         644 9d6e0672 282028 #> 27            228627 2023-04-17 10:20:46         755 0aa7342d 352811 #> 28              2909 2022-03-04 14:05:04         644 bfb4d8f3 416240 #> 29                 0 2023-04-17 09:50:00         755 00000000 417370 #> 30                 0 2023-04-17 09:50:00         755 00000000 417422 #> 31               635 2023-04-17 10:20:46         644 c3375fb9 417483 #> 32                 0 2023-04-17 09:50:00         755 00000000 417873 #> 33                 0 2023-04-17 09:50:00         755 00000000 417944 #> 34            178267 2023-04-17 10:20:46         644 d905adc8 418021 #> 35              1944 2022-03-04 14:05:04         644 d38da4b6 489218 #> 36              9592 2023-04-17 10:20:46         644 f55ccd93 490003 #> 37              6880 2023-04-17 10:20:40         644 4f65da62 494393 #> 38             11643 2023-04-17 10:20:40         644 119a0ee7 496402 #> 39              2349 2023-04-17 08:32:08         644 92f80ead 499287 #> 40             25288 2023-04-17 10:20:46         644 b69779f4 500150 #> 41            247235 2023-04-17 10:20:46         755 2090ba35 510746"},{"path":"https://r-lib.github.io/zip/dev/index.html","id":"uncompressing-zip-files","dir":"","previous_headings":"Usage","what":"Uncompressing ZIP files","title":"Cross-Platform zip Compression","text":"unzip() uncompresses ZIP archive:","code":"exdir <- tempfile() unzip(\"sources.zip\", exdir = exdir) dir(exdir) #> [1] \"R\"   \"src\""},{"path":"https://r-lib.github.io/zip/dev/index.html","id":"compressing-and-uncompressing-in-background-processes","dir":"","previous_headings":"Usage","what":"Compressing and uncompressing in background processes","title":"Cross-Platform zip Compression","text":"can use zip_process() unzip_process() functions create background zip / unzip processes. processes implemented top processx::process class, pollable.","code":""},{"path":"https://r-lib.github.io/zip/dev/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Cross-Platform zip Compression","text":"MIT","code":""},{"path":"https://r-lib.github.io/zip/dev/reference/deflate.html","id":null,"dir":"Reference","previous_headings":"","what":"Compress a raw GZIP stream — deflate","title":"Compress a raw GZIP stream — deflate","text":"Compress raw GZIP stream","code":""},{"path":"https://r-lib.github.io/zip/dev/reference/deflate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compress a raw GZIP stream — deflate","text":"","code":"deflate(buffer, level = 6L, pos = 1L, size = NULL)"},{"path":"https://r-lib.github.io/zip/dev/reference/deflate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compress a raw GZIP stream — deflate","text":"buffer Raw vector, containing data compress. level Compression level, integer 1 (fatest) 9 (best). pos Start position data compress buffer. size Compressed size estimate, NULL. given, small, output buffer resized multiple times.","code":""},{"path":"https://r-lib.github.io/zip/dev/reference/deflate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compress a raw GZIP stream — deflate","text":"Named list three entries: output: raw vector, compressed data, bytes_read: number bytes used buffer, bytes_written: number bytes written output buffer.","code":""},{"path":[]},{"path":"https://r-lib.github.io/zip/dev/reference/deflate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compress a raw GZIP stream — deflate","text":"","code":"data_gz <- deflate(charToRaw(\"Hello world!\")) inflate(data_gz$output) #> $output #>  [1] 48 65 6c 6c 6f 20 77 6f 72 6c 64 21 #>  #> $bytes_read #> [1] 24 #>  #> $bytes_written #> [1] 12 #>"},{"path":"https://r-lib.github.io/zip/dev/reference/inflate.html","id":null,"dir":"Reference","previous_headings":"","what":"Uncompress a raw GZIP stream — inflate","title":"Uncompress a raw GZIP stream — inflate","text":"Uncompress raw GZIP stream","code":""},{"path":"https://r-lib.github.io/zip/dev/reference/inflate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uncompress a raw GZIP stream — inflate","text":"","code":"inflate(buffer, pos = 1L, size = NULL)"},{"path":"https://r-lib.github.io/zip/dev/reference/inflate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uncompress a raw GZIP stream — inflate","text":"buffer Raw vector, containing data uncompress. pos Start position data uncompress buffer. size Uncompressed size estimate, NULL. given, small, output buffer resized multiple times.","code":""},{"path":"https://r-lib.github.io/zip/dev/reference/inflate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uncompress a raw GZIP stream — inflate","text":"Named list three entries: output: raw vector, uncompressed data, bytes_read: number bytes used buffer, bytes_written: number bytes written output buffer.","code":""},{"path":[]},{"path":"https://r-lib.github.io/zip/dev/reference/inflate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Uncompress a raw GZIP stream — inflate","text":"","code":"data_gz <- deflate(charToRaw(\"Hello world!\")) inflate(data_gz$output) #> $output #>  [1] 48 65 6c 6c 6f 20 77 6f 72 6c 64 21 #>  #> $bytes_read #> [1] 24 #>  #> $bytes_written #> [1] 12 #>"},{"path":"https://r-lib.github.io/zip/dev/reference/unzip.html","id":null,"dir":"Reference","previous_headings":"","what":"Uncompress 'zip' Archives — unzip","title":"Uncompress 'zip' Archives — unzip","text":"unzip() always restores modification times extracted files directories.","code":""},{"path":"https://r-lib.github.io/zip/dev/reference/unzip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uncompress 'zip' Archives — unzip","text":"","code":"unzip(zipfile, files = NULL, overwrite = TRUE, junkpaths = FALSE, exdir = \".\")"},{"path":"https://r-lib.github.io/zip/dev/reference/unzip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uncompress 'zip' Archives — unzip","text":"zipfile Path zip file uncompress. files Character vector files extract archive. Files within directories can specified, must use forward slash path separator, zip files use internally. NULL, files extracted. overwrite Whether overwrite existing files. FALSE file already exists, error thrown. junkpaths Whether ignore directory paths creating files. TRUE, files created exdir. exdir Directory uncompress archive . exist, created.","code":""},{"path":"https://r-lib.github.io/zip/dev/reference/unzip.html","id":"permissions","dir":"Reference","previous_headings":"","what":"Permissions","title":"Uncompress 'zip' Archives — unzip","text":"zip archive stores permissions created Unix, permissions restored.","code":""},{"path":"https://r-lib.github.io/zip/dev/reference/unzip.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Uncompress 'zip' Archives — unzip","text":"","code":"## temporary directory, to avoid messing up the user's workspace. dir.create(tmp <- tempfile()) dir.create(file.path(tmp, \"mydir\")) cat(\"first file\", file = file.path(tmp, \"mydir\", \"file1\")) cat(\"second file\", file = file.path(tmp, \"mydir\", \"file2\"))  zipfile <- tempfile(fileext = \".zip\") zip::zip(zipfile, \"mydir\", root = tmp)  ## List contents zip_list(zipfile) #>      filename compressed_size uncompressed_size           timestamp permissions #> 1      mydir/               0                 0 2024-11-19 21:25:20         755 #> 2 mydir/file1              15                10 2024-11-19 21:25:20         644 #> 3 mydir/file2              16                11 2024-11-19 21:25:20         644 #>      crc32 offset #> 1 00000000      0 #> 2 00effe3a     36 #> 3 735af9a0    108  ## Extract tmp2 <- tempfile() unzip(zipfile, exdir = tmp2) dir(tmp2, recursive = TRUE) #> [1] \"mydir/file1\" \"mydir/file2\""},{"path":"https://r-lib.github.io/zip/dev/reference/unzip_process.html","id":null,"dir":"Reference","previous_headings":"","what":"Class for an external unzip process — unzip_process","title":"Class for an external unzip process — unzip_process","text":"unzip_process() returns R6 class represents unzip process. implemented subclass processx::process.","code":""},{"path":"https://r-lib.github.io/zip/dev/reference/unzip_process.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for an external unzip process — unzip_process","text":"","code":"unzip_process()"},{"path":"https://r-lib.github.io/zip/dev/reference/unzip_process.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Class for an external unzip process — unzip_process","text":"unzip_process R6 class object, subclass processx::process.","code":""},{"path":"https://r-lib.github.io/zip/dev/reference/unzip_process.html","id":"using-the-unzip-process-class","dir":"Reference","previous_headings":"","what":"Using the unzip_process class","title":"Class for an external unzip process — unzip_process","text":"See processx::process class methods. Arguments: zipfile: Path zip file uncompress. exdir: Directory uncompress archive . exist, created. poll_connection: passed initialize method processx::process, allows using processx::poll() poll_io() method poll completion process. stderr: passed initialize method processx::process, default standard error written temporary file. file can used diagnose errors process failed. ... passed initialize method processx::process.","code":"up <- unzip_process()$new(zipfile, exdir = \".\", poll_connection = TRUE,                            stderr = tempfile(), ...)"},{"path":"https://r-lib.github.io/zip/dev/reference/unzip_process.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class for an external unzip process — unzip_process","text":"","code":"ex <- system.file(\"example.zip\", package = \"zip\") tmp <- tempfile() up <- unzip_process()$new(ex, exdir = tmp) up$wait() up$get_exit_status() #> [1] 0 dir(tmp) #> [1] \"example\""},{"path":"https://r-lib.github.io/zip/dev/reference/zip-package.html","id":null,"dir":"Reference","previous_headings":"","what":"zip: Cross-Platform 'zip' Compression — zip-package","title":"zip: Cross-Platform 'zip' Compression — zip-package","text":"Cross-Platform 'zip' Compression Library. replacement 'zip' function, require additional external tools platform.","code":""},{"path":[]},{"path":"https://r-lib.github.io/zip/dev/reference/zip-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"zip: Cross-Platform 'zip' Compression — zip-package","text":"Maintainer: Gábor Csárdi csardi.gabor@gmail.com contributors: Kuba Podgórski [contributor] Rich Geldreich [contributor] Posit Software, PBC [copyright holder, funder]","code":""},{"path":"https://r-lib.github.io/zip/dev/reference/zip.html","id":null,"dir":"Reference","previous_headings":"","what":"Compress Files into 'zip' Archives — zip","title":"Compress Files into 'zip' Archives — zip","text":"zip() creates new zip archive file.","code":""},{"path":"https://r-lib.github.io/zip/dev/reference/zip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compress Files into 'zip' Archives — zip","text":"","code":"zip(   zipfile,   files,   recurse = TRUE,   compression_level = 9,   include_directories = TRUE,   root = \".\",   mode = c(\"mirror\", \"cherry-pick\") )  zipr(   zipfile,   files,   recurse = TRUE,   compression_level = 9,   include_directories = TRUE,   root = \".\",   mode = c(\"cherry-pick\", \"mirror\") )  zip_append(   zipfile,   files,   recurse = TRUE,   compression_level = 9,   include_directories = TRUE,   root = \".\",   mode = c(\"mirror\", \"cherry-pick\") )  zipr_append(   zipfile,   files,   recurse = TRUE,   compression_level = 9,   include_directories = TRUE,   root = \".\",   mode = c(\"cherry-pick\", \"mirror\") )"},{"path":"https://r-lib.github.io/zip/dev/reference/zip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compress Files into 'zip' Archives — zip","text":"zipfile zip file create. file exists, zip overwrites , zip_append appends . directory error thrown. files List file add archive. See details absolute relative path names. recurse Whether add contents directories recursively. compression_level number 1 9. 9 compresses best, also takes longest. include_directories Whether explicitly include directories archive. Including directories might confuse MS Office reading docx files, set FALSE creating . root Change working directory creating archive. mode Selects files directories stored archive. can \"mirror\" \"cherry-pick\". See \"Relative Paths\" details.","code":""},{"path":"https://r-lib.github.io/zip/dev/reference/zip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compress Files into 'zip' Archives — zip","text":"name created zip file, invisibly.","code":""},{"path":"https://r-lib.github.io/zip/dev/reference/zip.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compress Files into 'zip' Archives — zip","text":"zip_append() appends compressed files existing 'zip' file.","code":""},{"path":"https://r-lib.github.io/zip/dev/reference/zip.html","id":"relative-paths","dir":"Reference","previous_headings":"","what":"Relative paths","title":"Compress Files into 'zip' Archives — zip","text":"zip() zip_append() can run two different modes: mirror mode cherry picking mode. handle specified files differently.","code":""},{"path":"https://r-lib.github.io/zip/dev/reference/zip.html","id":"mirror-mode","dir":"Reference","previous_headings":"","what":"Mirror mode","title":"Compress Files into 'zip' Archives — zip","text":"Mirror mode creating zip archive directory structure, exactly disk. current working directory root archive, paths fully kept. zip changes current directory root creating archive. E.g. consider following directory structure:   Assuming current working directory foo, following zip entries created zip:   Note zip refuses store files absolute paths, chops leading / character file names. relative paths allowed zip files.","code":". |-- foo |   |-- bar |   |   |-- file1 |   |   `-- file2 |   `-- bar2 `-- foo2     `-- file3 setwd(\"foo\") zip::zip(\"../test.zip\", c(\"bar/file1\", \"bar2\", \"../foo2\")) #> Warning in warn_for_dotdot(data$key): Some paths reference parent directory, #> creating non-portable zip file zip_list(\"../test.zip\")[, \"filename\", drop = FALSE] #>        filename #> 1     bar/file1 #> 2         bar2/ #> 3      ../foo2/ #> 4 ../foo2/file3"},{"path":"https://r-lib.github.io/zip/dev/reference/zip.html","id":"cherry-picking-mode","dir":"Reference","previous_headings":"","what":"Cherry picking mode","title":"Compress Files into 'zip' Archives — zip","text":"cherry picking mode, selected files directories root archive. mode handy want select subset files directories, possibly different paths put archive, top level. example directory structure :   zip version 2.3.0, \".\" special meaning files argument: include files (possibly directories) within current working directory, working directory . Note applies cherry picking mode.","code":"zip::zip(   \"../test2.zip\",   c(\"bar/file1\", \"bar2\", \"../foo2\"),   mode = \"cherry-pick\" ) zip_list(\"../test2.zip\")[, \"filename\", drop = FALSE] #>     filename #> 1      file1 #> 2      bar2/ #> 3      foo2/ #> 4 foo2/file3"},{"path":"https://r-lib.github.io/zip/dev/reference/zip.html","id":"permissions-","dir":"Reference","previous_headings":"","what":"Permissions:","title":"Compress Files into 'zip' Archives — zip","text":"zip() (zip_append(), etc.) add permissions archived files directories ZIP archive, Unix systems. zip unzip implementations support , recovered extracting archive. Note, however owner group (uid gid) currently omitted, even Unix.","code":""},{"path":"https://r-lib.github.io/zip/dev/reference/zip.html","id":"zipr-and-zipr-append-","dir":"Reference","previous_headings":"","what":"zipr() and zipr_append()","title":"Compress Files into 'zip' Archives — zip","text":"function exist historical reasons. identical zip() zipr_append() different default mode argument.","code":""},{"path":"https://r-lib.github.io/zip/dev/reference/zip.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compress Files into 'zip' Archives — zip","text":"","code":"## Some files to zip up. We will run all this in the R session's ## temporary directory, to avoid messing up the user's workspace. dir.create(tmp <- tempfile()) dir.create(file.path(tmp, \"mydir\")) cat(\"first file\", file = file.path(tmp, \"mydir\", \"file1\")) cat(\"second file\", file = file.path(tmp, \"mydir\", \"file2\"))  zipfile <- tempfile(fileext = \".zip\") zip::zip(zipfile, \"mydir\", root = tmp)  ## List contents zip_list(zipfile) #>      filename compressed_size uncompressed_size           timestamp permissions #> 1      mydir/               0                 0 2024-11-19 21:25:22         755 #> 2 mydir/file1              15                10 2024-11-19 21:25:22         644 #> 3 mydir/file2              16                11 2024-11-19 21:25:22         644 #>      crc32 offset #> 1 00000000      0 #> 2 00effe3a     36 #> 3 735af9a0    108  ## Add another file cat(\"third file\", file = file.path(tmp, \"mydir\", \"file3\")) zip_append(zipfile, file.path(\"mydir\", \"file3\"), root = tmp) zip_list(zipfile) #>      filename compressed_size uncompressed_size           timestamp permissions #> 1      mydir/               0                 0 2024-11-19 21:25:22         644 #> 2 mydir/file1              15                10 2024-11-19 21:25:22         644 #> 3 mydir/file2              16                11 2024-11-19 21:25:22         644 #> 4 mydir/file3              15                10 2024-11-19 21:25:22         600 #>      crc32 offset #> 1 00000000      0 #> 2 00effe3a     36 #> 3 735af9a0    108 #> 4 b0bf9ffe    181"},{"path":"https://r-lib.github.io/zip/dev/reference/zip_list.html","id":null,"dir":"Reference","previous_headings":"","what":"List Files in a 'zip' Archive — zip_list","title":"List Files in a 'zip' Archive — zip_list","text":"List Files 'zip' Archive","code":""},{"path":"https://r-lib.github.io/zip/dev/reference/zip_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Files in a 'zip' Archive — zip_list","text":"","code":"zip_list(zipfile)"},{"path":"https://r-lib.github.io/zip/dev/reference/zip_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Files in a 'zip' Archive — zip_list","text":"zipfile Path existing ZIP file.","code":""},{"path":"https://r-lib.github.io/zip/dev/reference/zip_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Files in a 'zip' Archive — zip_list","text":"data frame columns: filename, compressed_size, uncompressed_size, timestamp, permissions, crc32 offset.","code":""},{"path":"https://r-lib.github.io/zip/dev/reference/zip_list.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List Files in a 'zip' Archive — zip_list","text":"Note crc32 formatted using .hexmode(). offset refers start local zip header entry. Following approach seek() stored numeric rather integer vector can therefore represent values 2^53-1 (9 PB).","code":""},{"path":"https://r-lib.github.io/zip/dev/reference/zip_process.html","id":null,"dir":"Reference","previous_headings":"","what":"Class for an external zip process — zip_process","title":"Class for an external zip process — zip_process","text":"zip_process() returns R6 class represents zip process. implemented subclass processx::process.","code":""},{"path":"https://r-lib.github.io/zip/dev/reference/zip_process.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for an external zip process — zip_process","text":"","code":"zip_process()"},{"path":"https://r-lib.github.io/zip/dev/reference/zip_process.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Class for an external zip process — zip_process","text":"zip_process R6 class object, subclass processx::process.","code":""},{"path":"https://r-lib.github.io/zip/dev/reference/zip_process.html","id":"using-the-zip-process-class","dir":"Reference","previous_headings":"","what":"Using the zip_process class","title":"Class for an external zip process — zip_process","text":"See processx::process class methods. Arguments: zipfile: Path zip file create. files: List file add archive. specified file directory created top-level entry zip archive. recurse: Whether add contents directories recursively. include_directories: Whether explicitly include directories archive. Including directories might confuse MS Office reading docx files, set FALSE creating . poll_connection: passed initialize method processx::process, allows using processx::poll() poll_io() method poll completion process. stderr: passed initialize method processx::process, default standard error written temporary file. file can used diagnose errors process failed. ... passed initialize method processx::process.","code":"zp <- zip_process()$new(zipfile, files, recurse = TRUE,                          poll_connection = TRUE,                          stderr = tempfile(), ...)"},{"path":"https://r-lib.github.io/zip/dev/reference/zip_process.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class for an external zip process — zip_process","text":"","code":"dir.create(tmp <- tempfile()) write.table(iris, file = file.path(tmp, \"iris.ssv\")) zipfile <- tempfile(fileext = \".zip\") zp <- zip_process()$new(zipfile, tmp) zp$wait() zp$get_exit_status() #> [1] 0 zip_list(zipfile) #>                    filename compressed_size uncompressed_size #> 1         file17a562e3b086/               0                 0 #> 2 file17a562e3b086/iris.ssv            1126              4818 #>             timestamp permissions    crc32 offset #> 1 2024-11-19 21:25:22         755 00000000      0 #> 2 2024-11-19 21:25:22         644 474bc924     47"},{"path":[]},{"path":"https://r-lib.github.io/zip/dev/news/index.html","id":"zip-231","dir":"Changelog","previous_headings":"","what":"zip 2.3.1","title":"zip 2.3.1","text":"CRAN release: 2024-01-27 zip shared library now hides symbols (platforms support ), avoid name clashes libraries (#98).","code":""},{"path":"https://r-lib.github.io/zip/dev/news/index.html","id":"zip-230","dir":"Changelog","previous_headings":"","what":"zip 2.3.0","title":"zip 2.3.0","text":"CRAN release: 2023-04-17 zip now handles large zip files Windows (#65, #75, #79, @weshinsley). zip now behaves better absolute paths mirror mode, paths contain : character (#69, #70). zip::unzip() now uses process’s umask value (see umask(2)) Unix zip file contain Unix permissions (#67). Fix segmentation fault zip file can’t created (#91, @zeehio) Fix delayed evaluation error zipfile zip::zip() used (#92, @zeehio) New deflate() inflate() functions compress uncompress GZIP streams memory.","code":""},{"path":"https://r-lib.github.io/zip/dev/news/index.html","id":"zip-222","dir":"Changelog","previous_headings":"","what":"zip 2.2.2","title":"zip 2.2.2","text":"CRAN release: 2022-10-26 user visible changes.","code":""},{"path":"https://r-lib.github.io/zip/dev/news/index.html","id":"zip-221","dir":"Changelog","previous_headings":"","what":"zip 2.2.1","title":"zip 2.2.1","text":"CRAN release: 2022-09-08 user visible changes.","code":""}]
